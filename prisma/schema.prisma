// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Donator {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String
  password  String
  salt      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  balance   Float    @default(0)

  DonationBox       DonationBox[]
  PowerSupplies     PowerSupply[]
  FavouriteNgos     NGO[]
  FavouriteProjects Project[]
  Transaction       Donation[]
}

enum Status {
  WORKING
  READY
  AVAILABLE
  UNAVAILABLE
  UNINITIALIZED
}

model DonationBox {
  id          Int      @id @default(autoincrement())
  CUID        String   @unique @default(cuid())
  last_status Status
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  donatorId     Int?
  powerSupplyId Int?
  donator       Donator?     @relation(fields: [donatorId], references: [id])
  powerSupply   PowerSupply? @relation(fields: [powerSupplyId], references: [id])
}

model PowerSupply {
  id        Int      @id @default(autoincrement())
  name      String
  config    Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  configSchemaId Int
  configSchema   SupportedPowerSupply @relation(fields: [configSchemaId], references: [id])
  donatorId      Int
  donator        Donator              @relation(fields: [donatorId], references: [id])
  donationBoxes  DonationBox[]
}

model SupportedPowerSupply {
  id           Int      @id @default(autoincrement())
  configSchema Json
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  powerSupplies PowerSupply[]
}

model NGO {
  id                   Int        @id @default(autoincrement())
  name                 String
  email                String     @unique
  contact              String
  website_url          String
  description          String
  address              String
  password             String
  salt                 String
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  projects             Project[]
  FavouritedByDonators Donator[]
  donations            Donation[]
}

enum Category {
  Education
  Health
  Environment
  Human_Rights
  Animal_Rights
  Social
  OTHER
}

model Project {
  id                  Int      @id @default(autoincrement())
  name                String
  description         String
  fundraising_goal    Float
  fundraising_current Float
  fundraising_closed  Boolean
  progress            Float
  archived            Boolean
  target_date         DateTime
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  category            Category

  ngoId                Int?
  ngo                  NGO?       @relation(fields: [ngoId], references: [id])
  FavouritedByDonators Donator[]
  donations            Donation[]
}

model Donation {
  id        Int      @id @default(autoincrement())
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  donatorId Int
  projectId Int?
  ngoId     Int
  donator   Donator  @relation(fields: [donatorId], references: [id])
  project   Project? @relation(fields: [projectId], references: [id])
  ngo       NGO      @relation(fields: [ngoId], references: [id])
}
