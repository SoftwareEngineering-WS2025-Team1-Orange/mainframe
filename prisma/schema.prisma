// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Donator {
  id          Int           @id @default(autoincrement())
  firstname   String
  lastname    String
  email       String
  password    String
  salt        String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  DonationBox DonationBox[]
}

enum Status {
  WORKING
  READY
  AVAILABLE
  UNAVAILABLE
  UNINITIALIZED
}

model DonationBox {
  id          Int      @id @default(autoincrement())
  CUID        String   @unique @default(cuid())
  last_status Status
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  donatorId Int?
  donator   Donator? @relation(fields: [donatorId], references: [id])
}

model NGO {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  salt      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Project   Project[]
}

model Project {
  id               Int      @id @default(autoincrement())
  name             String
  description      String
  fundraising_goal Int
  deadline         DateTime
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  ngoId Int?
  ngo   NGO? @relation(fields: [ngoId], references: [id])
}
